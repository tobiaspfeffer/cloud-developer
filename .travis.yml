language: minimal

services: docker

env:
  - DOCKER_COMPOSE_VERSION=1.23.2

install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - sudo ./aws/install

script:
  - export TAG=$(cat version)
  - docker-compose -f udacity-c3-deployment/docker/docker-compose-build.yaml build --parallel
  - docker-compose -f udacity-c3-deployment/docker/docker-compose-build.yaml push
  - docker tag tobiaspfeffer/reverseproxy:${TAG} tobiaspfeffer/reverseproxy:latest
  - docker push tobiaspfeffer/reverseproxy:latest
  - docker tag tobiaspfeffer/udacity-restapi-user:${TAG} tobiaspfeffer/udacity-restapi-user:latest
  - docker push tobiaspfeffer/udacity-restapi-user:latest
  - docker tag tobiaspfeffer/udacity-restapi-feed:${TAG} tobiaspfeffer/udacity-restapi-feed:latest
  - docker push tobiaspfeffer/udacity-restapi-feed:latest
  - docker tag tobiaspfeffer/udacity-frontend:${TAG} tobiaspfeffer/udacity-frontend:latest
  - docker push tobiaspfeffer/udacity-frontend:latest

after_script:
# configure kubectl
  - sed -i -e 's|KUBE_CA_CERT|'"${KUBE_CA_CERT}"'|g' udacity-c3-deployment/k8s/kubeconfig
  - sed -i -e 's|TPF_POSTGRESS_USERNAME|'"${TPF_POSTGRESS_USERNAME}"'|g' udacity-c3-deployment/k8s/kubeconfig
  - sed -i -e 's|TPF_POSTGRESS_PASSWORD|'"${TPF_POSTGRESS_PASSWORD}"'|g' udacity-c3-deployment/k8s/kubeconfig
  - sed -i -e 's|TPF_AWS_CREDENTIALS|'"${TPF_AWS_CREDENTIALS}"'|g' udacity-c3-deployment/k8s/kubeconfig
  - sed -i -e 's|TPF_AWS_ACCESS_KEY_ID|'"${TPF_AWS_ACCESS_KEY_ID}"'|g' udacity-c3-deployment/k8s/kubeconfig
  - sed -i -e 's|TPF_AWS_SECRET_ACCESS_KEY|'"${TPF_AWS_SECRET_ACCESS_KEY}"'|g' udacity-c3-deployment/k8s/kubeconfig
# make available changes in the .yaml files to EKS
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/env-secret.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/aws-secret.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/env-configmap.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/backend-feed-deployment.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/backend-feed-service.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/backend-user-deployment.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/backend-user-service.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/reverseproxy-deployment.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/reverseproxy-service.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig describe svc reverseproxy
  - export aws_elb_url=$(kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig describe svc reverseproxy | grep "LoadBalancer Ingress:")
  - export API_HOST=$(echo ${aws_elb_url} | cut -d " " -f 3)
  - echo $API_HOST
  - sed -i -e 's|API_HOST|'"${API_HOST}"'|g' udacity-c3-frontend/environments/environment.ts
  - sed -i -e 's|API_HOST|'"${API_HOST}"'|g' udacity-c3-frontend/environments/environment.prod.ts
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/frontend-deployment.yaml
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig apply -f udacity-c3-deployment/k8s/frontend-service.yaml
# perform rolling update - rolling update is only performed on version change
  - export TAG=$(cat version)
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig set image deployment/frontend frontend=tobiaspfeffer/udacity-frontend:${TAG}
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig set image deployment/backend-user backend-user=tobiaspfeffer/udacity-backend-user:${TAG}
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig set image deployment/backend-feed backend-feed=tobiaspfeffer/udacity-backend-feed:${TAG}
  - kubectl --kubeconfig udacity-c3-deployment/k8s/kubeconfig set image deployment/reverseproxy reverseproxy=tobiaspfeffer/udacity-reverseproxy:${TAG}



